format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> E:\Project\Medidata\ClinicalTrialApp\target\scala-2.12\test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.3
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
3 items
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> E:\Project\Medidata\ClinicalTrialApp\target\scala-2.12\test-classes\medihealth\HealthServiceTest.class
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> E:\Project\Medidata\ClinicalTrialApp\target\scala-2.12\test-classes\medihealth\PatientTest.class
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> E:\Project\Medidata\ClinicalTrialApp\target\scala-2.12\test-classes\medihealth\TotalTest.class
binary dependencies:
12 items
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> C:\Program Files\Java\jre1.8.0_141\lib\rt.jar
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> C:\Users\cattermolea\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.3.jar
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> C:\Users\cattermolea\.ivy2\cache\org.scalactic\scalactic_2.12\bundles\scalactic_2.12-3.0.1.jar
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> C:\Users\cattermolea\.ivy2\cache\org.scalatest\scalatest_2.12\bundles\scalatest_2.12-3.0.1.jar
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> C:\Program Files\Java\jre1.8.0_141\lib\rt.jar
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> C:\Users\cattermolea\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.3.jar
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> C:\Users\cattermolea\.ivy2\cache\org.scalactic\scalactic_2.12\bundles\scalactic_2.12-3.0.1.jar
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> C:\Users\cattermolea\.ivy2\cache\org.scalatest\scalatest_2.12\bundles\scalatest_2.12-3.0.1.jar
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> C:\Program Files\Java\jre1.8.0_141\lib\rt.jar
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> C:\Users\cattermolea\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.3.jar
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> C:\Users\cattermolea\.ivy2\cache\org.scalactic\scalactic_2.12\bundles\scalactic_2.12-3.0.1.jar
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> C:\Users\cattermolea\.ivy2\cache\org.scalatest\scalatest_2.12\bundles\scalatest_2.12-3.0.1.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
17 items
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> medihealth.BloodTest$
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> medihealth.HealthService
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> medihealth.HealthServices$
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> medihealth.Patient
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> medihealth.Patient$
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> medihealth.Vaccine
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> medihealth.Vaccine$
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> medihealth.Patient
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> medihealth.Patient$
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> medihealth.BloodTest$
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> medihealth.Diagnosis$
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> medihealth.ECG$
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> medihealth.HealthService
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> medihealth.Patient
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> medihealth.Patient$
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> medihealth.Total
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> medihealth.Total$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
3 items
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> medihealth.HealthServiceTest
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> medihealth.PatientTest
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> medihealth.TotalTest
used names:
205 items
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> $org_scalatest_assert_macro_expr
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> $org_scalatest_assert_macro_left
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> $org_scalatest_assert_macro_right
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> *
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> +
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> -
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> /
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> <byname>
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> <init>
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> <repeated>
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> ==
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> A
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Any
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> ApplyDiscounts
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Assertion
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> AssertionsHelper
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> BigDecimal
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> BloodTest
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Bool
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Boolean
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> FlatSpec
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Function1
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> HealthService
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> HealthServiceTest
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> HealthServices
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> InAndIgnoreMethods
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Inclusive
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Int
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> List
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Nothing
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Patient
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Position
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Predef
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Prettifier
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Range
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> ResultOfStringPassedToVerb
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> RichInt
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> String
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> StringShouldWrapperForVerb
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> StringVerbStringInvocation
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> U
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Unit
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> Vaccine
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> apply
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> applyDiscount
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> assert
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> assertionsHelper
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> binaryMacroBool
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> collection
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> convertToInAndIgnoreMethods
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> convertToStringShouldWrapperForVerb
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> default
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> defaultCost
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> discount
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> foreach
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> fullPrice
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> here
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> i
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> immutable
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> in
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> injectionPrice
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> injectionsPrice
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> int2bigDecimal
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> intWrapper
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> list
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> listOfPatients
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> macroAssert
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> math
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> medihealth
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> org
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> package
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> patient
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> patientDiscount
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> patientWithInsuranceAnd70AgeDiscount
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> patientWithNoInsuranceAnd4AgeDiscount
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> patientWithNoInsuranceAnd65AgeDiscount
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> patientWithNoInsuranceAnd70AgeDiscount
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> patientWithNoInsuranceAndNoAgeDiscount
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> salePrice
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> scala
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> scalactic
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> scalatest
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> service
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> shorthandTestRegistrationFunction
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> should
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> source
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> to
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> vaccine
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> $org_scalatest_assert_macro_expr
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> $org_scalatest_assert_macro_left
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> $org_scalatest_assert_macro_right
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> <byname>
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> <init>
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> ==
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> Any
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> Assertion
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> AssertionsHelper
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> BigDecimal
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> Bool
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> Boolean
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> FlatSpec
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> InAndIgnoreMethods
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> Int
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> Patient
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> PatientTest
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> Position
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> Predef
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> Prettifier
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> ResultOfStringPassedToVerb
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> String
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> StringShouldWrapperForVerb
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> StringVerbStringInvocation
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> Unit
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> assert
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> assertionsHelper
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> binaryMacroBool
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> convertToInAndIgnoreMethods
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> convertToStringShouldWrapperForVerb
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> default
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> discount
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> here
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> in
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> macroAssert
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> medihealth
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> org
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> package
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> patient4YearsOld
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> patient5YearsOld
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> patient64YearsOld
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> patient65YearsOld
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> patient70YearsOld
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> patient71YearsOld
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> scalactic
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> scalatest
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> shorthandTestRegistrationFunction
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> should
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> source
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> $org_scalatest_assert_macro_expr
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> $org_scalatest_assert_macro_left
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> $org_scalatest_assert_macro_right
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> +
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> <byname>
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> <init>
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> <repeated>
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> ==
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> A
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Any
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> ApplyDiscounts
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Assertion
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> AssertionsHelper
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> BigDecimal
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> BloodTest
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Bool
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Boolean
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Diagnosis
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> ECG
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> FlatSpec
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> HealthService
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> InAndIgnoreMethods
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Int
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> List
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Nothing
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Patient
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Position
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Predef
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Prettifier
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> ResultOfStringPassedToVerb
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> String
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> StringShouldWrapperForVerb
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> StringVerbStringInvocation
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Total
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> TotalTest
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> Unit
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> addToTotal
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> apply
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> assert
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> assertionsHelper
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> binaryMacroBool
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> collection
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> convertToInAndIgnoreMethods
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> convertToStringShouldWrapperForVerb
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> default
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> firstService
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> firstTotal
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> fullPrice
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> here
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> immutable
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> in
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> macroAssert
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> medihealth
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> org
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> package
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> patient
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> salePrice
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> scala
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> scalactic
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> scalatest
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> secondService
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> secondTotal
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> shorthandTestRegistrationFunction
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> should
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> source
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> thirdService
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> thirdTotal
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> total
product stamps:
3 items
E:\Project\Medidata\ClinicalTrialApp\target\scala-2.12\test-classes\medihealth\HealthServiceTest.class -> lastModified(1504458030000)
E:\Project\Medidata\ClinicalTrialApp\target\scala-2.12\test-classes\medihealth\PatientTest.class -> lastModified(1504458030000)
E:\Project\Medidata\ClinicalTrialApp\target\scala-2.12\test-classes\medihealth\TotalTest.class -> lastModified(1504458030000)
source stamps:
3 items
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> hash(a441172ce90156c2f9a5f0f005697692262e5870)
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> hash(aa920421b5f55a882494bc80e4df6f8ff5ba525a)
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> hash(aaf96c545a3117d886047755fedff0758f5415db)
binary stamps:
4 items
C:\Program Files\Java\jre1.8.0_141\lib\rt.jar -> lastModified(1500402840029)
C:\Users\cattermolea\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.3.jar -> lastModified(1500979666000)
C:\Users\cattermolea\.ivy2\cache\org.scalactic\scalactic_2.12\bundles\scalactic_2.12-3.0.1.jar -> lastModified(1478757013000)
C:\Users\cattermolea\.ivy2\cache\org.scalatest\scalatest_2.12\bundles\scalatest_2.12-3.0.1.jar -> lastModified(1478757171000)
class names:
4 items
C:\Program Files\Java\jre1.8.0_141\lib\rt.jar -> java.lang.Object
C:\Users\cattermolea\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.3.jar -> scala.package$
C:\Users\cattermolea\.ivy2\cache\org.scalactic\scalactic_2.12\bundles\scalactic_2.12-3.0.1.jar -> org.scalactic.source.Position$
C:\Users\cattermolea\.ivy2\cache\org.scalatest\scalatest_2.12\bundles\scalatest_2.12-3.0.1.jar -> org.scalatest.FlatSpec
internal apis:
3 items
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> 

E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> 

E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> 

external apis:
11 items
medihealth.BloodTest$ -> 

medihealth.Diagnosis$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwn82zUgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAA1c3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwuHkNaXQAD2luamVjdGlvbnNQcmljZXNxAH4ADBacxlN0AAZub3RpZnlzcQB+AAxGOGn/dAAHdW5hcHBseXNxAH4ADBe51NJ0AA1IZWFsdGhTZXJ2aWNlc3EAfgAMbOQiXXQABG5hbWVzcQB+AAzDt0+RdAAOSGVhbHRoU2VydmljZXNzcQB+AAyHXaHmdAAEd2FpdHNxAH4ADGjfnlF0AA0kYXNJbnN0YW5jZU9mc3EAfgAM0nYOxHQAC2RlZmF1bHRDb3N0c3EAfgAMs0ORQ3QAEDxpbml0PiRkZWZhdWx0JDFzcQB+AAxHYReNdAAMcHJvZHVjdEFyaXR5c3EAfgAMqvyAW3QABmVxdWFsc3NxAH4ADB0DQFV0AAppbmplY3Rpb25zc3EAfgAMNStt13QADmluamVjdGlvblByaWNlc3EAfgAM90r8CXQADGFzSW5zdGFuY2VPZnNxAH4ADO4EcJ10AAxzeW5jaHJvbml6ZWRzcQB+AAz6Rb6MdAANJGlzSW5zdGFuY2VPZnNxAH4ADJ3E1Y10ABdhcHBseURpc2NvdW50JGRlZmF1bHQkM3NxAH4ADNtQQZx0AAhjYW5FcXVhbHNxAH4ADM0oCeh0AARYUmF5c3EAfgAME2/Z0XQADXByb2R1Y3RQcmVmaXhzcQB+AAzLI6a/dAAJbm90aWZ5QWxsc3EAfgAMIvkg0HQAA0VDR3NxAH4ADANR4FR0AAxpc0luc3RhbmNlT2ZzcQB+AAwIqaDvdAAHVmFjY2luZXNxAH4ADBrLKi50ABJudW1iZXJPZkluamVjdGlvbnNzcQB+AAwwwbi4dAAGPGluaXQ+c3EAfgAMMmra5nQABWFwcGx5c3EAfgAM0N/kzHQACWZ1bGxQcmljZXNxAH4ADAzEnxZ0AAI9PXNxAH4ADEBJazF0AAVjbG9uZXNxAH4ADPyyG/50AA1hcHBseURpc2NvdW50c3EAfgAMvu5P9HQACUJsb29kVGVzdHNxAH4ADC5/2At0AAYkaW5pdCRzcQB+AAz9DT8adAAGY2hvaWNlc3EAfgAMg472CHQABGNvcHlzcQB+AAxGPeRsdAAPYXBwbHkkZGVmYXVsdCQxc3EAfgAMiPPzInQACURpYWdub3Npc3NxAH4ADIHLrCh0AAh0b1N0cmluZ3NxAH4ADK/PXZR0AAIhPXNxAH4ADJJaFlB0AAhnZXRDbGFzc3NxAH4ADIoVHJl0AAlzYWxlUHJpY2VzcQB+AAxEg7lTdAAOY29weSRkZWZhdWx0JDFzcQB+AAyy86PmdAAIZGlzY291bnRzcQB+AAyzgerbdAACbmVzcQB+AAzA6aRidAAOQXBwbHlEaXNjb3VudHNzcQB+AAyk2eAxdAACZXFzcQB+AAymnqlfdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMaojSFXQAAiMjc3EAfgAM+tTRq3QABGxpc3RzcQB+AAwFipzidAAIZmluYWxpemVzcQB+AAw1hTvmdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAwP4gJIdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAIc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgCBeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHABdAAYbWVkaWhlYWx0aC5IZWFsdGhTZXJ2aWNldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AJlzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AgUwACWluaGVyaXRlZHEAfgCBTAAHcGFyZW50c3EAfgCBeHEAfgCec3EAfgCZdXEAfgB8AAAAAHNxAH4AmXVxAH4AfAAAAABzcQB+AJl1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AJ10AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AJ1zcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+ALZ0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+ALdzcQB+AKp0AANBbnlzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2dAAFc2NhbGFxAH4AvXNxAH4AfnEAfgCLdXEAfgCMAAAAAHNxAH4AjgB0ABltZWRpaGVhbHRoLkhlYWx0aFNlcnZpY2VzdXEAfgCRAAAAAH5xAH4Ak3QABk1vZHVsZXVxAH4AlwAAAABzcQB+AJlxAH4An3NxAH4AmXNxAH4AoXNxAH4AmXVxAH4AfAAAAABzcQB+AJl1cQB+AHwAAAAAc3EAfgCZdXEAfgCoAAAABnNxAH4AqnQADFNlcmlhbGl6YWJsZXNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANdzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqdAAHUHJvZHVjdHEAfgDYc3EAfgCqdAAGRXF1YWxzcQB+ANhzcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgDYc3EAfgB+cQB+AIt1cQB+AIwAAAAAc3EAfgCOAHQAFG1lZGloZWFsdGguRGlhZ25vc2lzdXEAfgCRAAAAAHEAfgDKdXEAfgCXAAAAAHNxAH4AmXEAfgCfc3EAfgCZc3EAfgChc3EAfgCZdXEAfgB8AAAAAHNxAH4AmXVxAH4AfAAAAABzcQB+AJl1cQB+AKgAAAAHc3EAfgCqcQB+ANdzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDXc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgDkcQB+AP5zcQB+AKp0AAZFcXVhbHNxAH4A/nNxAH4AqnQADUhlYWx0aFNlcnZpY2VzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2dAAKbWVkaWhlYWx0aHEAfgC9c3EAfgCqcQB+AK1zcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZxAH4Au3EAfgC9c3EAfgCqcQB+AL9xAH4A/nNxAH4AfnEAfgCLdXEAfgCMAAAAAHNxAH4AjgB0AA9tZWRpaGVhbHRoLlhSYXl1cQB+AJEAAAAAcQB+AMp1cQB+AJcAAAAAc3EAfgCZcQB+AJ9zcQB+AJlzcQB+AKFzcQB+AJl1cQB+AHwAAAAAc3EAfgCZdXEAfgB8AAAAAHNxAH4AmXVxAH4AqAAAAAdzcQB+AKpxAH4A13NxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANdzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AORxAH4BKnNxAH4AqnQABkVxdWFsc3EAfgEqc3EAfgCqdAANSGVhbHRoU2VydmljZXNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZ0AAptZWRpaGVhbHRocQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgEqc3EAfgB+cQB+AIt1cQB+AIwAAAAAc3EAfgCOAHQADm1lZGloZWFsdGguRUNHdXEAfgCRAAAAAHEAfgDKdXEAfgCXAAAAAHNxAH4AmXEAfgCfc3EAfgCZc3EAfgChc3EAfgCZdXEAfgB8AAAAAHNxAH4AmXVxAH4AfAAAAABzcQB+AJl1cQB+AKgAAAAHc3EAfgCqcQB+ANdzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDXc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgDkcQB+AVZzcQB+AKp0AAZFcXVhbHNxAH4BVnNxAH4AqnQADUhlYWx0aFNlcnZpY2VzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2dAAKbWVkaWhlYWx0aHEAfgC9c3EAfgCqcQB+AK1zcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZxAH4Au3EAfgC9c3EAfgCqcQB+AL9xAH4BVnNxAH4AfnEAfgCLdXEAfgCMAAAAAHNxAH4AjgB0ABRtZWRpaGVhbHRoLkJsb29kVGVzdHVxAH4AkQAAAABxAH4AynVxAH4AlwAAAABzcQB+AJlxAH4An3NxAH4AmXNxAH4AoXNxAH4AmXVxAH4AfAAAAABzcQB+AJl1cQB+AHwAAAAAc3EAfgCZdXEAfgCoAAAAB3NxAH4AqnEAfgDXc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1zcQB+AKpxAH4A13NxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnQAAmlvcQB+AL1zcQB+AKpxAH4A5HEAfgGCc3EAfgCqdAAGRXF1YWxzcQB+AYJzcQB+AKp0AA1IZWFsdGhTZXJ2aWNlc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnQACm1lZGloZWFsdGhxAH4AvXNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+AYJzcQB+AH5xAH4Ai3VxAH4AjAAAAABzcQB+AI4AdAASbWVkaWhlYWx0aC5WYWNjaW5ldXEAfgCRAAAAAHEAfgDKdXEAfgCXAAAAAHNxAH4AmXEAfgCfc3EAfgCZc3EAfgChc3EAfgCZdXEAfgB8AAAAAHNxAH4AmXVxAH4AfAAAAABzcQB+AJl1cQB+AKgAAAAHc3EAfgCqcQB+ANdzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDXc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgDkcQB+Aa5zcQB+AKp0AAZFcXVhbHNxAH4BrnNxAH4AqnQADUhlYWx0aFNlcnZpY2VzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2dAAKbWVkaWhlYWx0aHEAfgC9c3EAfgCqcQB+AK1zcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZxAH4Au3EAfgC9c3EAfgCqcQB+AL9xAH4BrnNxAH4AfnEAfgCLdXEAfgCMAAAAAHNxAH4AjgB0ABJtZWRpaGVhbHRoLlZhY2NpbmV1cQB+AJEAAAAAfnEAfgCTdAAIQ2xhc3NEZWZ1cQB+AJcAAAAAc3EAfgCZcQB+AJ9zcQB+AJlzcQB+AKFzcQB+AJl1cQB+AHwAAAAAc3EAfgCZdXEAfgB8AAAAAHNxAH4AmXVxAH4AqAAAAAdzcQB+AKpxAH4A13NxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANdzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AORxAH4B3HNxAH4AqnQABkVxdWFsc3EAfgHcc3EAfgCqdAANSGVhbHRoU2VydmljZXNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZ0AAptZWRpaGVhbHRocQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgHcdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAKbWVkaWhlYWx0aHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXkivMQ51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA+RTpcUHJvamVjdFxNZWRpZGF0YVxDbGluaWNhbFRyaWFsQXBwXHRhcmdldFxzY2FsYS0yLjEyXGNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSl0ZLj8tCwP5BlYURdGy858Fkcrg==
medihealth.ECG$ -> 

medihealth.HealthService -> 

medihealth.HealthServices$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwn82zUgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAA1c3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwuHkNaXQAD2luamVjdGlvbnNQcmljZXNxAH4ADBacxlN0AAZub3RpZnlzcQB+AAxGOGn/dAAHdW5hcHBseXNxAH4ADBe51NJ0AA1IZWFsdGhTZXJ2aWNlc3EAfgAMbOQiXXQABG5hbWVzcQB+AAzDt0+RdAAOSGVhbHRoU2VydmljZXNzcQB+AAyHXaHmdAAEd2FpdHNxAH4ADGjfnlF0AA0kYXNJbnN0YW5jZU9mc3EAfgAM0nYOxHQAC2RlZmF1bHRDb3N0c3EAfgAMs0ORQ3QAEDxpbml0PiRkZWZhdWx0JDFzcQB+AAxHYReNdAAMcHJvZHVjdEFyaXR5c3EAfgAMqvyAW3QABmVxdWFsc3NxAH4ADB0DQFV0AAppbmplY3Rpb25zc3EAfgAMNStt13QADmluamVjdGlvblByaWNlc3EAfgAM90r8CXQADGFzSW5zdGFuY2VPZnNxAH4ADO4EcJ10AAxzeW5jaHJvbml6ZWRzcQB+AAz6Rb6MdAANJGlzSW5zdGFuY2VPZnNxAH4ADJ3E1Y10ABdhcHBseURpc2NvdW50JGRlZmF1bHQkM3NxAH4ADNtQQZx0AAhjYW5FcXVhbHNxAH4ADM0oCeh0AARYUmF5c3EAfgAME2/Z0XQADXByb2R1Y3RQcmVmaXhzcQB+AAzLI6a/dAAJbm90aWZ5QWxsc3EAfgAMIvkg0HQAA0VDR3NxAH4ADANR4FR0AAxpc0luc3RhbmNlT2ZzcQB+AAwIqaDvdAAHVmFjY2luZXNxAH4ADBrLKi50ABJudW1iZXJPZkluamVjdGlvbnNzcQB+AAwwwbi4dAAGPGluaXQ+c3EAfgAMMmra5nQABWFwcGx5c3EAfgAM0N/kzHQACWZ1bGxQcmljZXNxAH4ADAzEnxZ0AAI9PXNxAH4ADEBJazF0AAVjbG9uZXNxAH4ADPyyG/50AA1hcHBseURpc2NvdW50c3EAfgAMvu5P9HQACUJsb29kVGVzdHNxAH4ADC5/2At0AAYkaW5pdCRzcQB+AAz9DT8adAAGY2hvaWNlc3EAfgAMg472CHQABGNvcHlzcQB+AAxGPeRsdAAPYXBwbHkkZGVmYXVsdCQxc3EAfgAMiPPzInQACURpYWdub3Npc3NxAH4ADIHLrCh0AAh0b1N0cmluZ3NxAH4ADK/PXZR0AAIhPXNxAH4ADJJaFlB0AAhnZXRDbGFzc3NxAH4ADIoVHJl0AAlzYWxlUHJpY2VzcQB+AAxEg7lTdAAOY29weSRkZWZhdWx0JDFzcQB+AAyy86PmdAAIZGlzY291bnRzcQB+AAyzgerbdAACbmVzcQB+AAzA6aRidAAOQXBwbHlEaXNjb3VudHNzcQB+AAyk2eAxdAACZXFzcQB+AAymnqlfdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMaojSFXQAAiMjc3EAfgAM+tTRq3QABGxpc3RzcQB+AAwFipzidAAIZmluYWxpemVzcQB+AAw1hTvmdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAwP4gJIdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAIc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgCBeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHABdAAYbWVkaWhlYWx0aC5IZWFsdGhTZXJ2aWNldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AJlzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AgUwACWluaGVyaXRlZHEAfgCBTAAHcGFyZW50c3EAfgCBeHEAfgCec3EAfgCZdXEAfgB8AAAAAHNxAH4AmXVxAH4AfAAAAABzcQB+AJl1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AJ10AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AJ1zcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+ALZ0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+ALdzcQB+AKp0AANBbnlzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2dAAFc2NhbGFxAH4AvXNxAH4AfnEAfgCLdXEAfgCMAAAAAHNxAH4AjgB0ABltZWRpaGVhbHRoLkhlYWx0aFNlcnZpY2VzdXEAfgCRAAAAAH5xAH4Ak3QABk1vZHVsZXVxAH4AlwAAAABzcQB+AJlxAH4An3NxAH4AmXNxAH4AoXNxAH4AmXVxAH4AfAAAAABzcQB+AJl1cQB+AHwAAAAAc3EAfgCZdXEAfgCoAAAABnNxAH4AqnQADFNlcmlhbGl6YWJsZXNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANdzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqdAAHUHJvZHVjdHEAfgDYc3EAfgCqdAAGRXF1YWxzcQB+ANhzcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgDYc3EAfgB+cQB+AIt1cQB+AIwAAAAAc3EAfgCOAHQAFG1lZGloZWFsdGguRGlhZ25vc2lzdXEAfgCRAAAAAHEAfgDKdXEAfgCXAAAAAHNxAH4AmXEAfgCfc3EAfgCZc3EAfgChc3EAfgCZdXEAfgB8AAAAAHNxAH4AmXVxAH4AfAAAAABzcQB+AJl1cQB+AKgAAAAHc3EAfgCqcQB+ANdzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDXc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgDkcQB+AP5zcQB+AKp0AAZFcXVhbHNxAH4A/nNxAH4AqnQADUhlYWx0aFNlcnZpY2VzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2dAAKbWVkaWhlYWx0aHEAfgC9c3EAfgCqcQB+AK1zcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZxAH4Au3EAfgC9c3EAfgCqcQB+AL9xAH4A/nNxAH4AfnEAfgCLdXEAfgCMAAAAAHNxAH4AjgB0AA9tZWRpaGVhbHRoLlhSYXl1cQB+AJEAAAAAcQB+AMp1cQB+AJcAAAAAc3EAfgCZcQB+AJ9zcQB+AJlzcQB+AKFzcQB+AJl1cQB+AHwAAAAAc3EAfgCZdXEAfgB8AAAAAHNxAH4AmXVxAH4AqAAAAAdzcQB+AKpxAH4A13NxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANdzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AORxAH4BKnNxAH4AqnQABkVxdWFsc3EAfgEqc3EAfgCqdAANSGVhbHRoU2VydmljZXNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZ0AAptZWRpaGVhbHRocQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgEqc3EAfgB+cQB+AIt1cQB+AIwAAAAAc3EAfgCOAHQADm1lZGloZWFsdGguRUNHdXEAfgCRAAAAAHEAfgDKdXEAfgCXAAAAAHNxAH4AmXEAfgCfc3EAfgCZc3EAfgChc3EAfgCZdXEAfgB8AAAAAHNxAH4AmXVxAH4AfAAAAABzcQB+AJl1cQB+AKgAAAAHc3EAfgCqcQB+ANdzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDXc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgDkcQB+AVZzcQB+AKp0AAZFcXVhbHNxAH4BVnNxAH4AqnQADUhlYWx0aFNlcnZpY2VzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2dAAKbWVkaWhlYWx0aHEAfgC9c3EAfgCqcQB+AK1zcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZxAH4Au3EAfgC9c3EAfgCqcQB+AL9xAH4BVnNxAH4AfnEAfgCLdXEAfgCMAAAAAHNxAH4AjgB0ABRtZWRpaGVhbHRoLkJsb29kVGVzdHVxAH4AkQAAAABxAH4AynVxAH4AlwAAAABzcQB+AJlxAH4An3NxAH4AmXNxAH4AoXNxAH4AmXVxAH4AfAAAAABzcQB+AJl1cQB+AHwAAAAAc3EAfgCZdXEAfgCoAAAAB3NxAH4AqnEAfgDXc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1zcQB+AKpxAH4A13NxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnQAAmlvcQB+AL1zcQB+AKpxAH4A5HEAfgGCc3EAfgCqdAAGRXF1YWxzcQB+AYJzcQB+AKp0AA1IZWFsdGhTZXJ2aWNlc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnQACm1lZGloZWFsdGhxAH4AvXNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+AYJzcQB+AH5xAH4Ai3VxAH4AjAAAAABzcQB+AI4AdAASbWVkaWhlYWx0aC5WYWNjaW5ldXEAfgCRAAAAAHEAfgDKdXEAfgCXAAAAAHNxAH4AmXEAfgCfc3EAfgCZc3EAfgChc3EAfgCZdXEAfgB8AAAAAHNxAH4AmXVxAH4AfAAAAABzcQB+AJl1cQB+AKgAAAAHc3EAfgCqcQB+ANdzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDXc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgDkcQB+Aa5zcQB+AKp0AAZFcXVhbHNxAH4BrnNxAH4AqnQADUhlYWx0aFNlcnZpY2VzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2dAAKbWVkaWhlYWx0aHEAfgC9c3EAfgCqcQB+AK1zcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZxAH4Au3EAfgC9c3EAfgCqcQB+AL9xAH4BrnNxAH4AfnEAfgCLdXEAfgCMAAAAAHNxAH4AjgB0ABJtZWRpaGVhbHRoLlZhY2NpbmV1cQB+AJEAAAAAfnEAfgCTdAAIQ2xhc3NEZWZ1cQB+AJcAAAAAc3EAfgCZcQB+AJ9zcQB+AJlzcQB+AKFzcQB+AJl1cQB+AHwAAAAAc3EAfgCZdXEAfgB8AAAAAHNxAH4AmXVxAH4AqAAAAAdzcQB+AKpxAH4A13NxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANdzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AORxAH4B3HNxAH4AqnQABkVxdWFsc3EAfgHcc3EAfgCqdAANSGVhbHRoU2VydmljZXNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZ0AAptZWRpaGVhbHRocQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgHcdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAKbWVkaWhlYWx0aHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXkivMQ51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA+RTpcUHJvamVjdFxNZWRpZGF0YVxDbGluaWNhbFRyaWFsQXBwXHRhcmdldFxzY2FsYS0yLjEyXGNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSl0ZLj8tCwP5BlYURdGy858Fkcrg==
medihealth.Patient -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw4hAarAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAqc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw0MLTinQABm5vdGlmeXNxAH4ADAc5BxN0AAd1bmFwcGx5c3EAfgAMSiIqUHQABHdhaXRzcQB+AAwEZCGHdAAOY29weSRkZWZhdWx0JDJzcQB+AAyapybGdAANJGFzSW5zdGFuY2VPZnNxAH4ADBo9OQd0AA1yZXNvbHZlQ2hvaWNlc3EAfgAMvJ89EnQACWluc3VyYW5jZXNxAH4ADLLIDG50AAxwcm9kdWN0QXJpdHlzcQB+AAzhQNMCdAAGZXF1YWxzc3EAfgAMp8aqpHQADGFzSW5zdGFuY2VPZnNxAH4ADL9+LMZ0AAxzeW5jaHJvbml6ZWRzcQB+AAzpxodXdAANJGlzSW5zdGFuY2VPZnNxAH4ADFDHobN0AAhjYW5FcXVhbHNxAH4ADCH8raN0AA1wcm9kdWN0UHJlZml4c3EAfgAMIgxmxHQAA2FnZXNxAH4ADE5KuC50AAlub3RpZnlBbGxzcQB+AAyXyslndAAMaXNJbnN0YW5jZU9mc3EAfgAMPIH9qXQADWFzayRkZWZhdWx0JDNzcQB+AAxoNgTNdAAGPGluaXQ+c3EAfgAMzW/lLHQABWFwcGx5c3EAfgAMBZN0MXQAAj09c3EAfgAMG7mMCnQABWNsb25lc3EAfgAM7U/3hXQABiRpbml0JHNxAH4ADHcmUGp0AAZnZXRBZ2VzcQB+AAzC4HyedAANYm9vbGVhbkNob2ljZXNxAH4ADAshnZZ0AAdQYXRpZW50c3EAfgAMBk0OF3QABGNvcHlzcQB+AAzcT5RIdAAIdG9TdHJpbmdzcQB+AAwZkHJ0dAACIT1zcQB+AAx/m2icdAAIZ2V0Q2xhc3NzcQB+AAxrpTGtdAADYXNrc3EAfgAMt6UIz3QADmNvcHkkZGVmYXVsdCQxc3EAfgAM08BBH3QACGRpc2NvdW50c3EAfgAMDHdRqHQACmdldERldGFpbHNzcQB+AAxvTACKdAACbmVzcQB+AAzFsdtidAAMZ2V0SW5zdXJhbmNlc3EAfgAMEEX8ZHQAAmVxc3EAfgAMDDcVZnQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADJo3rWp0AAIjI3NxAH4ADN84yHt0AAhmaW5hbGl6ZXNxAH4ADOx5cBd0AA5wcm9kdWN0RWxlbWVudHNxAH4ADHobNjR0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAJzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ABJtZWRpaGVhbHRoLlBhdGllbnR1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4Ag3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBrTAAJaW5oZXJpdGVkcQB+AGtMAAdwYXJlbnRzcQB+AGt4cQB+AIhzcQB+AIN1cQB+AGYAAAAAc3EAfgCDdXEAfgBmAAAAAHNxAH4Ag3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAAGc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4Ah3QADFNlcmlhbGl6YWJsZXNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4Ah3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AoXNxAH4AlHEAfgCXc3EAfgCYc3EAfgCbdXEAfgCeAAAAA3NxAH4AoHQABGphdmFzcQB+AKB0AAJpb3EAfgClc3EAfgCUdAAHUHJvZHVjdHEAfgCac3EAfgCUdAAGRXF1YWxzcQB+AJpzcQB+AJR0AAZPYmplY3RzcQB+AJhzcQB+AJt1cQB+AJ4AAAADc3EAfgCgcQB+AKtzcQB+AKB0AARsYW5ncQB+AKVzcQB+AJR0AANBbnlxAH4AmnNxAH4AaHEAfgB1dXEAfgB2AAAAAHNxAH4AeAB0ABJtZWRpaGVhbHRoLlBhdGllbnR1cQB+AHsAAAAAfnEAfgB9dAAGTW9kdWxldXEAfgCBAAAAAHNxAH4Ag3EAfgCJc3EAfgCDc3EAfgCLc3EAfgCDdXEAfgBmAAAAAHNxAH4Ag3VxAH4AZgAAAABzcQB+AIN1cQB+AJIAAAAEc3EAfgCUcQB+AJdzcQB+AJhzcQB+AJt1cQB+AJ4AAAACc3EAfgCgcQB+AKNxAH4ApXNxAH4AlHEAfgCXc3EAfgCYc3EAfgCbdXEAfgCeAAAAA3NxAH4AoHEAfgCrc3EAfgCgdAACaW9xAH4ApXNxAH4AlHEAfgCzc3EAfgCYc3EAfgCbdXEAfgCeAAAAA3NxAH4AoHEAfgCrc3EAfgCgcQB+ALlxAH4ApXNxAH4AlHEAfgC7cQB+AM51cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AAptZWRpaGVhbHRoc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFeSK8xDnVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AD5FOlxQcm9qZWN0XE1lZGlkYXRhXENsaW5pY2FsVHJpYWxBcHBcdGFyZ2V0XHNjYWxhLTIuMTJcY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFG9VQF90xa+xPEg9lKI8MY2D6H7u
medihealth.Patient$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw4hAarAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAqc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw0MLTinQABm5vdGlmeXNxAH4ADAc5BxN0AAd1bmFwcGx5c3EAfgAMSiIqUHQABHdhaXRzcQB+AAwEZCGHdAAOY29weSRkZWZhdWx0JDJzcQB+AAyapybGdAANJGFzSW5zdGFuY2VPZnNxAH4ADBo9OQd0AA1yZXNvbHZlQ2hvaWNlc3EAfgAMvJ89EnQACWluc3VyYW5jZXNxAH4ADLLIDG50AAxwcm9kdWN0QXJpdHlzcQB+AAzhQNMCdAAGZXF1YWxzc3EAfgAMp8aqpHQADGFzSW5zdGFuY2VPZnNxAH4ADL9+LMZ0AAxzeW5jaHJvbml6ZWRzcQB+AAzpxodXdAANJGlzSW5zdGFuY2VPZnNxAH4ADFDHobN0AAhjYW5FcXVhbHNxAH4ADCH8raN0AA1wcm9kdWN0UHJlZml4c3EAfgAMIgxmxHQAA2FnZXNxAH4ADE5KuC50AAlub3RpZnlBbGxzcQB+AAyXyslndAAMaXNJbnN0YW5jZU9mc3EAfgAMPIH9qXQADWFzayRkZWZhdWx0JDNzcQB+AAxoNgTNdAAGPGluaXQ+c3EAfgAMzW/lLHQABWFwcGx5c3EAfgAMBZN0MXQAAj09c3EAfgAMG7mMCnQABWNsb25lc3EAfgAM7U/3hXQABiRpbml0JHNxAH4ADHcmUGp0AAZnZXRBZ2VzcQB+AAzC4HyedAANYm9vbGVhbkNob2ljZXNxAH4ADAshnZZ0AAdQYXRpZW50c3EAfgAMBk0OF3QABGNvcHlzcQB+AAzcT5RIdAAIdG9TdHJpbmdzcQB+AAwZkHJ0dAACIT1zcQB+AAx/m2icdAAIZ2V0Q2xhc3NzcQB+AAxrpTGtdAADYXNrc3EAfgAMt6UIz3QADmNvcHkkZGVmYXVsdCQxc3EAfgAM08BBH3QACGRpc2NvdW50c3EAfgAMDHdRqHQACmdldERldGFpbHNzcQB+AAxvTACKdAACbmVzcQB+AAzFsdtidAAMZ2V0SW5zdXJhbmNlc3EAfgAMEEX8ZHQAAmVxc3EAfgAMDDcVZnQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADJo3rWp0AAIjI3NxAH4ADN84yHt0AAhmaW5hbGl6ZXNxAH4ADOx5cBd0AA5wcm9kdWN0RWxlbWVudHNxAH4ADHobNjR0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAJzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ABJtZWRpaGVhbHRoLlBhdGllbnR1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4Ag3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBrTAAJaW5oZXJpdGVkcQB+AGtMAAdwYXJlbnRzcQB+AGt4cQB+AIhzcQB+AIN1cQB+AGYAAAAAc3EAfgCDdXEAfgBmAAAAAHNxAH4Ag3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAAGc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4Ah3QADFNlcmlhbGl6YWJsZXNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4Ah3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AoXNxAH4AlHEAfgCXc3EAfgCYc3EAfgCbdXEAfgCeAAAAA3NxAH4AoHQABGphdmFzcQB+AKB0AAJpb3EAfgClc3EAfgCUdAAHUHJvZHVjdHEAfgCac3EAfgCUdAAGRXF1YWxzcQB+AJpzcQB+AJR0AAZPYmplY3RzcQB+AJhzcQB+AJt1cQB+AJ4AAAADc3EAfgCgcQB+AKtzcQB+AKB0AARsYW5ncQB+AKVzcQB+AJR0AANBbnlxAH4AmnNxAH4AaHEAfgB1dXEAfgB2AAAAAHNxAH4AeAB0ABJtZWRpaGVhbHRoLlBhdGllbnR1cQB+AHsAAAAAfnEAfgB9dAAGTW9kdWxldXEAfgCBAAAAAHNxAH4Ag3EAfgCJc3EAfgCDc3EAfgCLc3EAfgCDdXEAfgBmAAAAAHNxAH4Ag3VxAH4AZgAAAABzcQB+AIN1cQB+AJIAAAAEc3EAfgCUcQB+AJdzcQB+AJhzcQB+AJt1cQB+AJ4AAAACc3EAfgCgcQB+AKNxAH4ApXNxAH4AlHEAfgCXc3EAfgCYc3EAfgCbdXEAfgCeAAAAA3NxAH4AoHEAfgCrc3EAfgCgdAACaW9xAH4ApXNxAH4AlHEAfgCzc3EAfgCYc3EAfgCbdXEAfgCeAAAAA3NxAH4AoHEAfgCrc3EAfgCgcQB+ALlxAH4ApXNxAH4AlHEAfgC7cQB+AM51cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AAptZWRpaGVhbHRoc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFeSK8xDnVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AD5FOlxQcm9qZWN0XE1lZGlkYXRhXENsaW5pY2FsVHJpYWxBcHBcdGFyZ2V0XHNjYWxhLTIuMTJcY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFG9VQF90xa+xPEg9lKI8MY2D6H7u
medihealth.Total -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwIIudZQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAmc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwzQYGYnQABm5vdGlmeXNxAH4ADJgrGsx0ABVmb3JtYXRWYWx1ZSRkZWZhdWx0JDJzcQB+AAzDQ+9SdAAEd2FpdHNxAH4ADOq45wh0AA5jb3B5JGRlZmF1bHQkMnNxAH4ADE2Zmjt0AA0kYXNJbnN0YW5jZU9mc3EAfgAM3n4xRXQAEHNlcnZpY2VzQXNTdHJpbmdzcQB+AAz78/5FdAAMcHJvZHVjdEFyaXR5c3EAfgAMuu62wnQABmVxdWFsc3NxAH4ADB3BHsR0AAxhc0luc3RhbmNlT2ZzcQB+AAwXF/x2dAAFcHJpbnRzcQB+AAxlwG4JdAAMc3luY2hyb25pemVkc3EAfgAMWFQeEXQADSRpc0luc3RhbmNlT2ZzcQB+AAzKfkh+dAAOaGVhbHRoU2VydmljZXNzcQB+AAyu9/TCdAAIY2FuRXF1YWxzcQB+AAyQmDx3dAAHYmFsYW5jZXNxAH4ADPcBEep0AA1wcm9kdWN0UHJlZml4c3EAfgAM3z3F/nQACW5vdGlmeUFsbHNxAH4ADHSFepR0AAxpc0luc3RhbmNlT2ZzcQB+AAwZKOX0dAAGPGluaXQ+c3EAfgAMApTO4nQAC2Zvcm1hdFZhbHVlc3EAfgAMzVRAsnQABVRvdGFsc3EAfgAMNfvKIXQAAj09c3EAfgAMVr/1BnQABWNsb25lc3EAfgAMvEgcAXQABiRpbml0JHNxAH4ADHhFQ2V0AARjb3B5c3EAfgAMMSOlkXQACHRvU3RyaW5nc3EAfgAMfj3IznQAAiE9c3EAfgAMeReC2nQACGdldENsYXNzc3EAfgAMB9CHynQADmNvcHkkZGVmYXVsdCQxc3EAfgAMwTRkBnQACmZpbmFsUHJpbnRzcQB+AAzuNh1odAACbmVzcQB+AAy/sntSdAACZXFzcQB+AAyqONWadAAKYWRkVG9Ub3RhbHNxAH4ADLaqDEx0AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAyKMUyPdAACIyNzcQB+AAxF+sybdAAIZmluYWxpemVzcQB+AAyJf+JhdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAyhNmP3dAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBjeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAQbWVkaWhlYWx0aC5Ub3RhbHVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgB7c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AGNMAAlpbmhlcml0ZWRxAH4AY0wAB3BhcmVudHNxAH4AY3hxAH4AgHNxAH4Ae3VxAH4AXgAAAABzcQB+AHt1cQB+AF4AAAAAc3EAfgB7dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAZzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB/dAAMU2VyaWFsaXphYmxlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB/c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCZc3EAfgCMcQB+AI9zcQB+AJBzcQB+AJN1cQB+AJYAAAADc3EAfgCYdAAEamF2YXNxAH4AmHQAAmlvcQB+AJ1zcQB+AIx0AAdQcm9kdWN0cQB+AJJzcQB+AIx0AAZFcXVhbHNxAH4AknNxAH4AjHQABk9iamVjdHNxAH4AkHNxAH4Ak3VxAH4AlgAAAANzcQB+AJhxAH4Ao3NxAH4AmHQABGxhbmdxAH4AnXNxAH4AjHQAA0FueXEAfgCSdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAKbWVkaWhlYWx0aHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXkivMQ51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA+RTpcUHJvamVjdFxNZWRpZGF0YVxDbGluaWNhbFRyaWFsQXBwXHRhcmdldFxzY2FsYS0yLjEyXGNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQhm2b7X3u4kO+h49pYgWabXgJH/g==
medihealth.Total$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwIIudZQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAmc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwzQYGYnQABm5vdGlmeXNxAH4ADJgrGsx0ABVmb3JtYXRWYWx1ZSRkZWZhdWx0JDJzcQB+AAzDQ+9SdAAEd2FpdHNxAH4ADOq45wh0AA5jb3B5JGRlZmF1bHQkMnNxAH4ADE2Zmjt0AA0kYXNJbnN0YW5jZU9mc3EAfgAM3n4xRXQAEHNlcnZpY2VzQXNTdHJpbmdzcQB+AAz78/5FdAAMcHJvZHVjdEFyaXR5c3EAfgAMuu62wnQABmVxdWFsc3NxAH4ADB3BHsR0AAxhc0luc3RhbmNlT2ZzcQB+AAwXF/x2dAAFcHJpbnRzcQB+AAxlwG4JdAAMc3luY2hyb25pemVkc3EAfgAMWFQeEXQADSRpc0luc3RhbmNlT2ZzcQB+AAzKfkh+dAAOaGVhbHRoU2VydmljZXNzcQB+AAyu9/TCdAAIY2FuRXF1YWxzcQB+AAyQmDx3dAAHYmFsYW5jZXNxAH4ADPcBEep0AA1wcm9kdWN0UHJlZml4c3EAfgAM3z3F/nQACW5vdGlmeUFsbHNxAH4ADHSFepR0AAxpc0luc3RhbmNlT2ZzcQB+AAwZKOX0dAAGPGluaXQ+c3EAfgAMApTO4nQAC2Zvcm1hdFZhbHVlc3EAfgAMzVRAsnQABVRvdGFsc3EAfgAMNfvKIXQAAj09c3EAfgAMVr/1BnQABWNsb25lc3EAfgAMvEgcAXQABiRpbml0JHNxAH4ADHhFQ2V0AARjb3B5c3EAfgAMMSOlkXQACHRvU3RyaW5nc3EAfgAMfj3IznQAAiE9c3EAfgAMeReC2nQACGdldENsYXNzc3EAfgAMB9CHynQADmNvcHkkZGVmYXVsdCQxc3EAfgAMwTRkBnQACmZpbmFsUHJpbnRzcQB+AAzuNh1odAACbmVzcQB+AAy/sntSdAACZXFzcQB+AAyqONWadAAKYWRkVG9Ub3RhbHNxAH4ADLaqDEx0AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAyKMUyPdAACIyNzcQB+AAxF+sybdAAIZmluYWxpemVzcQB+AAyJf+JhdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAyhNmP3dAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBjeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAQbWVkaWhlYWx0aC5Ub3RhbHVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgB7c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AGNMAAlpbmhlcml0ZWRxAH4AY0wAB3BhcmVudHNxAH4AY3hxAH4AgHNxAH4Ae3VxAH4AXgAAAABzcQB+AHt1cQB+AF4AAAAAc3EAfgB7dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAZzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB/dAAMU2VyaWFsaXphYmxlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB/c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCZc3EAfgCMcQB+AI9zcQB+AJBzcQB+AJN1cQB+AJYAAAADc3EAfgCYdAAEamF2YXNxAH4AmHQAAmlvcQB+AJ1zcQB+AIx0AAdQcm9kdWN0cQB+AJJzcQB+AIx0AAZFcXVhbHNxAH4AknNxAH4AjHQABk9iamVjdHNxAH4AkHNxAH4Ak3VxAH4AlgAAAANzcQB+AJhxAH4Ao3NxAH4AmHQABGxhbmdxAH4AnXNxAH4AjHQAA0FueXEAfgCSdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAKbWVkaWhlYWx0aHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXkivMQ51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA+RTpcUHJvamVjdFxNZWRpZGF0YVxDbGluaWNhbFRyaWFsQXBwXHRhcmdldFxzY2FsYS0yLjEyXGNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQhm2b7X3u4kO+h49pYgWabXgJH/g==
medihealth.Vaccine -> 

medihealth.Vaccine$ -> 

source infos:
3 items
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\HealthServiceTest.scala -> 
AAAAAAAAAAA=
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\PatientTest.scala -> 
AAAAAAAAAAA=
E:\Project\Medidata\ClinicalTrialApp\src\test\scala\TotalTest.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXkivrJp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAQ0U6XFByb2plY3RcTWVkaWRhdGFcQ2xpbmljYWxUcmlhbEFwcFx0YXJnZXRcc2NhbGEtMi4xMlx0ZXN0LWNsYXNzZXN0AAEv
